{"version":3,"sources":["../../routes/videos.js"],"names":["express","require","router","Router","db","db2","mongoose","videos","model","collections","local_file","create_collection","get","req","res","next","session","username","show_message","message","find_all_videos","find","all_videos","render","title","console","log","redirect","params","remove","_id","post","files","video","truncated","length","upload","headers","forEach","upload_video","body","collection","create","toString","module","exports"],"mappings":";;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;;AAEA,IAAMC,KAAKH,QAAQ,cAAR,CAAX;AACA,IAAMI,MAAMJ,QAAQ,mBAAR,CAAZ;AACA,IAAMK,WAAWL,QAAQ,UAAR,CAAjB;AACA,IAAMM,SAASD,SAASE,KAAT,CAAe,QAAf,CAAf;AACA,IAAMC,cAAcH,SAASE,KAAT,CAAe,aAAf,CAApB;;AAEA,IAAME,aAAaT,QAAQ,wBAAR,CAAnB;AACA,IAAMU,oBAAoBV,QAAQ,+BAAR,CAA1B;;AAEAC,OAAOU,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAAA;;AACtC,QAAIF,IAAIG,OAAJ,CAAYC,QAAhB,EAA0B;AACtB,YAAIC,eAAe,KAAnB;AACA,YAAIC,UAAU,EAAd;AACA,gBAAQN,IAAIG,OAAJ,CAAYG,OAApB;AACI,iBAAK,SAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,kBAAV;AACA;AACJ,iBAAK,WAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,mBAAV;AACA;AACJ,iBAAK,SAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,gBAAV;AACA;AACJ,iBAAK,oBAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,oBAAV;AACA;AACJ,iBAAK,OAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,OAAV;AACA;AACJ,iBAAK,QAAL;AACID,+BAAe,IAAf;AACAC,0BAAU,eAAV;AACA;AAxBR;AA0BA,YAAMC;AAAA,+EAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAESb,OAAOc,IAAP,EAFT;;AAAA;AAEVC,0CAFU;;AAGhBR,oCAAIS,MAAJ,CAAW,QAAX,EAAqB;AACjBC,2CAAO,QADU;AAEjBN,kDAAcA,YAFG;AAGjBC,6CAASA,OAHQ;AAIjBF,8CAAUJ,IAAIG,OAAJ,CAAYC,QAJL;AAKjBV,4CAAQe;AALS,iCAArB;AAHgB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlB;;AAAA;AAAA;AAAA;AAAA,WAAN;AAcAG,gBAAQC,GAAR,CAAYN,iBAAZ;AACAP,YAAIG,OAAJ,CAAYG,OAAZ,GAAsB,IAAtB;AACH,KA7CD,MA6COL,IAAIa,QAAJ,CAAa,QAAb;AACV,CA/CD;;AAiDAzB,OAAOU,GAAP,CAAW,mBAAX,EAAgC,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACtD,QAAIF,IAAIG,OAAJ,CAAYC,QAAhB,EAA0B;AACtBJ,YAAIG,OAAJ,CAAYG,OAAZ,GAAsBN,IAAIe,MAAJ,CAAWT,OAAjC;AACAL,YAAIa,QAAJ,CAAa,SAAb;AACH,KAHD,MAGOb,IAAIa,QAAJ,CAAa,QAAb;AACV,CALD;;AAOAzB,OAAOU,GAAP,CAAW,cAAX,EAA2B,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACjD,QAAIF,IAAIG,OAAJ,CAAYC,QAAhB,EAA0B;AACtBQ,gBAAQC,GAAR,CAAYhB,WAAWmB,MAAX,CAAkBhB,IAAIe,MAAJ,CAAWE,GAA7B,EAAkC,YAAY;AACtDhB,gBAAIa,QAAJ,CAAa,wBAAb;AACH,SAFW,CAAZ;AAGH,KAJD,MAIOb,IAAIa,QAAJ,CAAa,QAAb;AACV,CAND;;AAQAzB,OAAO6B,IAAP,CAAY,SAAZ,EAAuB,UAAUlB,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7CU,YAAQC,GAAR,CAAYb,IAAImB,KAAJ,CAAUC,KAAV,CAAgBC,SAA5B;AACA,QAAIrB,IAAIG,OAAJ,CAAYC,QAAhB,EAA0B;AACtB,YAAI,CAACJ,IAAImB,KAAL,IAAc,CAACnB,IAAImB,KAAJ,CAAUC,KAA7B,EAAoC;AAChCnB,gBAAIa,QAAJ,CAAa,yBAAb;AACH,SAFD,MAEO;AACH,gBAAId,IAAImB,KAAJ,CAAUC,KAAV,CAAgBE,MAAhB,KAA2B,CAA/B,EAAkC;AAC9BV,wBAAQC,GAAR,CAAYhB,WAAW0B,MAAX,CAAkBvB,IAAImB,KAAJ,CAAUC,KAA5B,EAAmCpB,IAAIwB,OAAJ,CAAY,gBAAZ,CAAnC,EAAkEvB,GAAlE,CAAZ;AACH,aAFD,MAEO;AACHD,oBAAImB,KAAJ,CAAUC,KAAV,CAAgBK,OAAhB,CAAwB,UAAUC,YAAV,EAAwB;AAC5Cd,4BAAQC,GAAR,CAAYhB,WAAW0B,MAAX,CAAkBG,YAAlB,EAAgC1B,IAAIwB,OAAJ,CAAY,gBAAZ,CAAhC,EAA+DvB,GAA/D,CAAZ;AACH,iBAFD;AAGH;AACJ;AACJ,KAZD,MAYOA,IAAIa,QAAJ,CAAa,QAAb;AACV,CAfD;;AAiBAzB,OAAO6B,IAAP,CAAY,aAAZ,EAA2B,UAAUlB,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACjD,QAAIF,IAAIG,OAAJ,CAAYC,QAAhB,EAA0B;AACtB,YAAI,CAACJ,IAAI2B,IAAJ,CAASC,UAAV,IAAwB5B,IAAI2B,IAAJ,CAASC,UAAT,CAAoBN,MAApB,KAA+B,CAA3D,EAA8D;AAC1DrB,gBAAIa,QAAJ,CAAa,2BAAb;AACH,SAFD,MAEO;AACHF,oBAAQC,GAAR,CAAYf,kBAAkB+B,MAAlB,CAAyB7B,IAAI2B,IAAJ,CAASC,UAAT,CAAoBN,MAA7C,EAAqDtB,IAAI2B,IAAJ,CAASC,UAAT,CAAoBE,QAApB,EAArD,EAAqF,YAAY;AACzG7B,oBAAIa,QAAJ,CAAa,oCAAb;AACH,aAFW,CAAZ;AAGH;AACJ,KARD,MAQOb,IAAIa,QAAJ,CAAa,QAAb;AACV,CAVD;;AAYAiB,OAAOC,OAAP,GAAiB3C,MAAjB","file":"videos.js","sourcesContent":["const express = require('express');\nconst router = express.Router();\n\nconst db = require('../db/videos');\nconst db2 = require('../db/collections');\nconst mongoose = require('mongoose');\nconst videos = mongoose.model('videos');\nconst collections = mongoose.model('collections');\n\nconst local_file = require('../function/local_file');\nconst create_collection = require('../function/create_collection');\n\nrouter.get('/', function (req, res, next) {\n    if (req.session.username) {\n        let show_message = false;\n        let message = \"\";\n        switch (req.session.message) {\n            case \"no_file\":\n                show_message = true;\n                message = \"No file selected\";\n                break;\n            case \"no_select\":\n                show_message = true;\n                message = \"No video selected\";\n                break;\n            case \"success\":\n                show_message = true;\n                message = \"Upload success\";\n                break;\n            case \"collection_success\":\n                show_message = true;\n                message = \"Collection created\";\n                break;\n            case \"error\":\n                show_message = true;\n                message = \"Error\";\n                break;\n            case \"delete\":\n                show_message = true;\n                message = \"Video deleted\";\n                break;\n        }\n        const find_all_videos = async () => {\n            try {\n                const all_videos = await videos.find();\n                res.render('videos', {\n                    title: 'Videos',\n                    show_message: show_message,\n                    message: message,\n                    username: req.session.username,\n                    videos: all_videos\n                });\n            } catch (err) {\n                return err;\n            }\n        };\n        console.log(find_all_videos());\n        req.session.message = null;\n    } else res.redirect('/login')\n});\n\nrouter.get('/message/:message', function (req, res, next) {\n    if (req.session.username) {\n        req.session.message = req.params.message;\n        res.redirect(\"/videos\");\n    } else res.redirect('/login');\n});\n\nrouter.get('/delete/:_id', function (req, res, next) {\n    if (req.session.username) {\n        console.log(local_file.remove(req.params._id, function () {\n            res.redirect(\"/videos/message/delete\");\n        }));\n    } else res.redirect('/login');\n});\n\nrouter.post('/upload', function (req, res, next) {\n    console.log(req.files.video.truncated);\n    if (req.session.username) {\n        if (!req.files || !req.files.video) {\n            res.redirect(\"/videos/message/no_file\");\n        } else {\n            if (req.files.video.length === 1) {\n                console.log(local_file.upload(req.files.video, req.headers['content-length'], res));\n            } else {\n                req.files.video.forEach(function (upload_video) {\n                    console.log(local_file.upload(upload_video, req.headers['content-length'], res));\n                });\n            }\n        }\n    } else res.redirect('/login')\n});\n\nrouter.post('/collection', function (req, res, next) {\n    if (req.session.username) {\n        if (!req.body.collection || req.body.collection.length === 0) {\n            res.redirect(\"/videos/message/no_select\");\n        } else {\n            console.log(create_collection.create(req.body.collection.length, req.body.collection.toString(), function () {\n                res.redirect(\"/videos/message/collection_success\");\n            }));\n        }\n    } else res.redirect('/login')\n});\n\nmodule.exports = router;\n"]}